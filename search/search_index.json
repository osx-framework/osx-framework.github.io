{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"OSX Core OSX Core is a community edition fork of es_extended (better known as ESX) and will be maintained by various trusted members of the FiveM community. Goals # Allow even versions of ESX scripts pre 1.2 to continue to function with as few edits as possible. Ensure backwards compatibility/new features at the same time as adding optimisations and general other boosts. About # es_extended is a roleplay framework for FiveM. ESX is short for EssentialMode Extended. The to-go framework for creating an economy based roleplay server on FiveM and most popular on the platform, too! ESX was initially developed by Gizz back in 2017 for his friend as the were creating an FiveM server and there wasn't any economy roleplaying frameworks available. The original code was written within a week or two and later open sourced, it has ever since been improved and parts been rewritten to further improve on it. Links # FiveM Forum Thread (coming soon!) ESX Migration Guide ExM Discord FiveM Native Reference Requirements # A fully configured installation of mysql-async (or equivalent) Features # Weight based inventory system Weapons support, including support for attachments and tints Supports different money accounts (defaulted with cash, bank and black money) Many official resources available in our GitHub Job system, with grades and clothes support Supports multiple languages, most strings are localized Easy to use API for developers to easily integrate EX to their projects Register your own commands easily, with argument validation, chat suggestion and using FXServer ACL Exclusive Features # We have made some exclusive features for OSX Core only, find them all here: Functions","title":"Home"},{"location":"#goals","text":"Allow even versions of ESX scripts pre 1.2 to continue to function with as few edits as possible. Ensure backwards compatibility/new features at the same time as adding optimisations and general other boosts.","title":"Goals"},{"location":"#about","text":"es_extended is a roleplay framework for FiveM. ESX is short for EssentialMode Extended. The to-go framework for creating an economy based roleplay server on FiveM and most popular on the platform, too! ESX was initially developed by Gizz back in 2017 for his friend as the were creating an FiveM server and there wasn't any economy roleplaying frameworks available. The original code was written within a week or two and later open sourced, it has ever since been improved and parts been rewritten to further improve on it.","title":"About"},{"location":"#links","text":"FiveM Forum Thread (coming soon!) ESX Migration Guide ExM Discord FiveM Native Reference","title":"Links"},{"location":"#requirements","text":"A fully configured installation of mysql-async (or equivalent)","title":"Requirements"},{"location":"#features","text":"Weight based inventory system Weapons support, including support for attachments and tints Supports different money accounts (defaulted with cash, bank and black money) Many official resources available in our GitHub Job system, with grades and clothes support Supports multiple languages, most strings are localized Easy to use API for developers to easily integrate EX to their projects Register your own commands easily, with argument validation, chat suggestion and using FXServer ACL","title":"Features"},{"location":"#exclusive-features","text":"We have made some exclusive features for OSX Core only, find them all here: Functions","title":"Exclusive Features"},{"location":"Using OSX Core/","text":"Using OSX Core Danger OSX Core is in the BETA stage and is not yet recommended for production use however, if you know what you're doing, you should be fine. Please report any bugs with as much detail as possible by making an issue on the OSX Core repository! Requirements # An installation of FXServer artifact 2371 or greater (You can find the latest artifacts here; Windows or Linux ) A fully configured installation of fivem-mysql-async (or equivalent) version 3.2.0 or greater If you are installing OSX Core on a fresh installation of FXServer then follow the Standard Installation guide. Otherwise, if you are replacing ESX with OSX Core then follow the Migration to OSX Core guide. Both guides assume that you have knowledge of how to configure FXServer and that you know how to install resources so make sure you do. Standard Installation # Installing OSX Core is almost exactly the same as installing ESX so if you've already done that before, this is a piece of cake! If you haven't, don't worry, it's not that hard. This guide assumes that you have already installed the latest version of FXServer (preferably following this guide) and that you have a MySQL server setup and configured correctly with the mysql-async resource. If you don't have those setup yet, go and do that first! Downloading First, you need to download OSX Core and ESX's UI resources, you can do this one of two ways: Manually downloading the latest releases from GitHub, easiest for beginners Cloning using Git, the preferred method as it simplifies the update process down the track Manually Note While it is recommended that you organise your resources into sub directories, FXServer allows you to place resources anywhere in the resources provided that you do not place them within other resources or directories with names not surrounded by [] . Download OSX Core into the resources directory Download esx_menu_default into the resources directory Download esx_menu_dialog into the resources directory Download esx_menu_list into the resources directory Using Git Running the following commands while within your server's resources directory will download all of the resources. git clone https://github.com/OSX Core/OSX Core OSX Core git clone https://github.com/ESX-Org/esx_menu_default esx_menu_default git clone https://github.com/ESX-Org/esx_menu_dialog esx_menu_dialog git clone https://github.com/ESX-Org/esx_menu_list esx_menu_list Installation Import OSX Core.sql into your SQL database Add the following items to your server.cfg add_principal group.admin group.user add_ace resource.OSX Core command.add_ace allow add_ace resource.OSX Core command.add_principal allow add_ace resource.OSX Core command.remove_principal allow ensure mysql-async ensure OSX Core ensure esx_menu_default ensure esx_menu_list ensure esx_menu_dialog Now start your server as normal. If all goes well, you will see the message [OSX Core] [INFO] OSX Core has been initialized appear in your server console without any errors. Migration to OSX Core # One of the goals of the OSX Core project is complete backwards compatibility with ESX and EssentialMode. This means that the installation is essentially a drag and drop process, provided that all the dependencies are up-to-date. Before doing anything, take a backup . OSX Core is beta software and while nothing bad should happen, if it does, a full backup of both your server and database will save you. Additional Requirements An installation of EssentialMode = version 6.4.0 Installation Make absolutely sure that all of the requirements are met. The easiest way to do this is to update FXServer, EssentialMode and MySQL Async to their latest versions. OSX Core will not work on outdated versions of the dependencies. Delete the es_extended folder from your resources folder. (may also be located in the [essential] folder) Download OSX Core into your resources folder. You can do this by either creating a folder named OSX Core in the resources folder and unzipping the content of this zip into it or, if you have Git installed, running the command git clone https://github.com/OSX Core/OSX Core OSX Core while in the resources folder. Add the following items to your server.cfg : add_principal group.admin group.user add_ace resource.OSX Core command.add_ace allow add_ace resource.OSX Core command.add_principal allow add_ace resource.OSX Core command.remove_principal allow Now start your server as normal. If all goes well, you will see the message [OSX Core] [INFO] OSX Core has been initialized appear in your server console without any errors. Troubleshooting # Please make sure that you followed the appropriate guide and that you followed the guide's instructions exactly. If you still can't not working or you are getting errors in your server console, please ask for help in the ExM Discord in the #support channel and be sure to provide as much detail as possible! If there are any common things people get stuck on or easily fixed errors, we'll add work arounds here!","title":"Using OSX Core"},{"location":"Using OSX Core/#requirements","text":"An installation of FXServer artifact 2371 or greater (You can find the latest artifacts here; Windows or Linux ) A fully configured installation of fivem-mysql-async (or equivalent) version 3.2.0 or greater If you are installing OSX Core on a fresh installation of FXServer then follow the Standard Installation guide. Otherwise, if you are replacing ESX with OSX Core then follow the Migration to OSX Core guide. Both guides assume that you have knowledge of how to configure FXServer and that you know how to install resources so make sure you do.","title":"Requirements"},{"location":"Using OSX Core/#standard-installation","text":"Installing OSX Core is almost exactly the same as installing ESX so if you've already done that before, this is a piece of cake! If you haven't, don't worry, it's not that hard. This guide assumes that you have already installed the latest version of FXServer (preferably following this guide) and that you have a MySQL server setup and configured correctly with the mysql-async resource. If you don't have those setup yet, go and do that first!","title":"Standard Installation"},{"location":"Using OSX Core/#migration-to-OSX Core","text":"One of the goals of the OSX Core project is complete backwards compatibility with ESX and EssentialMode. This means that the installation is essentially a drag and drop process, provided that all the dependencies are up-to-date. Before doing anything, take a backup . OSX Core is beta software and while nothing bad should happen, if it does, a full backup of both your server and database will save you.","title":"Migration to OSX Core"},{"location":"Using OSX Core/#troubleshooting","text":"Please make sure that you followed the appropriate guide and that you followed the guide's instructions exactly. If you still can't not working or you are getting errors in your server console, please ask for help in the ExM Discord in the #support channel and be sure to provide as much detail as possible! If there are any common things people get stuck on or easily fixed errors, we'll add work arounds here!","title":"Troubleshooting"},{"location":"functions/Client Functions/","text":"Client Functions Client functions exclusive to the OSX Core framework Note For these functions to work you must be using the OSX Core method of importing functions. To do this simply add shared_script '@OSX Core/imports.lua' to your fxmanifest.lua. ExM.Game.PlayAnim # ExM.Game.PlayAnim(animDict, animName, upperbodyOnly, duration) This function is a quick and easy way to play any animation you want without having to request animation dictionaries or specify a heap of parameters. Parameters Argument Data Type Optional Default Value Description animDict string No - The animation dictionary animName string No - The animation in the dictionary to play upperbodyOnly boolean Yes false If you want the animation to only affect the upperbody duration integer Yes -1 (full animation) Duration in ms you want the animation to run for Example ExM.Game.PlayAnim( mini@sprunk , plyr_buy_drink_pt1 , false, 1500) ExM.Game.CreatePed # ExM.Game.CreatePed(pedModel, pedCoords, isNetworked, pedType) This function is a quick and easy way to create a ped without having to request models or anything, you can choose whether or not to store the ped in a variable or not. Parameters Argument Data Type Optional Default Value Description pedModel hash No - The model of the ped you want to spawn pedCoords vector3/4 No - You can use a vector3 or vector4 here, if only using a vector3 the heading will default to 0.0 isNetworked boolean Yes false If you want the ped to be networked or not pedType integer Yes 4 (PED_TYPE_CIVMALE) The type of ped you want to use. List of Ped Types Example local coords = GetEntityCoords(PlayerPedId()) local ped = ExM.Game.CreatePed(`a_m_m_acult_01`, vec4(coords.xyz, 180.0), true, 27) ExM.Markers.Add # ExM.Markers.Add(mType, mPos, red, green, blue, alpha, rangeToShow, bobUpAndDown, mScale, mRot, mDir, faceCamera, textureDict, textureName) This function is a quick and easy way to create a marker and to draw it appropriately and efficiently without degrading performance Parameters Argument Data Type Optional Default Value Description mType integer No - The type of marker you want to use List of Marker Types mPos vector3 No - The position of where the marker is, you must use a vector3 here red integer No - The red channel of the colour you want the marker (0-255) green integer No - The green channel of the colour you want the marker (0-255) blue integer No - The blue channel of the colour you want the marker (0-255) alpha integer No - The alpha channel of the colour you want the marker (0-255) rangeToShow integer Yes 50.0 The range at which you want the marker to show bobUpAndDown boolean Yes false If you want the marker to bob up and down mScale vector3 Yes vec(1, 1, 1) The size of the marker mRot vector3 Yes vec(0, 0, 0) The rotation of the marker mDir vector3 Yes vec(0, 0, 0) The direction of the marker faceCamera boolean Yes false If you want the marker to face the camera textureDict string Yes nil A custom texture dictionary if you want your own marker type textureName string Yes nil The name of the texture in the texture dictionary Example -- This would create and store the marker in a variable, this is using custom textures from a Rockstar texture dictionary local marker = ExM.Markers.Add(1, vec(1224.128, 2710.614, 38.00576), 255, 0, 0, 100, 100.0, false, vec(5, 5, 2), vec(0, 0, 0), vec(0, 0, 0), false, mpmissmarkers256 , special_vehicle_race_series ) -- Or if you want a more simple circular marker you could do the following which only needs the marker type, pos and rgba values. It will use the default values for everything else local marker2 = ExM.Markers.Add(1, vec(1224.128, 2710.614, 38.00576), 255, 0, 0, 100) ExM.Markers.Remove # ExM.Markers.Remove(markerVar) This function is for removing a marker you previously created with ExM.Markers.Add Parameters Argument Data Type Optional Default Value Description markerVar integer No - The variable of the marker you want to remove Example -- Create the marker local marker = ExM.Markers.Add(1, vec(1224.128, 2710.614, 38.00576), 255, 0, 0, 100) -- Remove it later when you don't need it anymore ExM.Markers.Remove(marker) ExM.Markers.In # ExM.Markers.In(markerVar) This function is for checking if you're in a marker you previously created with ExM.Markers.Add Parameters Argument Data Type Optional Default Value Description markerVar integer No - The variable of the marker you want to check Example -- Create the marker local marker = ExM.Markers.Add(1, vec(1224.128, 2710.614, 38.00576), 255, 0, 0, 100) -- Check if you're standing in the marker (run this in a loop) if ExM.Markers.In(marker) then -- You're in the marker, do some stuff here end","title":"Client Functions"},{"location":"functions/Client Functions/#exmgameplayanim","text":"ExM.Game.PlayAnim(animDict, animName, upperbodyOnly, duration) This function is a quick and easy way to play any animation you want without having to request animation dictionaries or specify a heap of parameters.","title":"ExM.Game.PlayAnim"},{"location":"functions/Client Functions/#exmgamecreateped","text":"ExM.Game.CreatePed(pedModel, pedCoords, isNetworked, pedType) This function is a quick and easy way to create a ped without having to request models or anything, you can choose whether or not to store the ped in a variable or not.","title":"ExM.Game.CreatePed"},{"location":"functions/Client Functions/#exmmarkersadd","text":"ExM.Markers.Add(mType, mPos, red, green, blue, alpha, rangeToShow, bobUpAndDown, mScale, mRot, mDir, faceCamera, textureDict, textureName) This function is a quick and easy way to create a marker and to draw it appropriately and efficiently without degrading performance","title":"ExM.Markers.Add"},{"location":"functions/Client Functions/#exmmarkersremove","text":"ExM.Markers.Remove(markerVar) This function is for removing a marker you previously created with ExM.Markers.Add","title":"ExM.Markers.Remove"},{"location":"functions/Client Functions/#exmmarkersin","text":"ExM.Markers.In(markerVar) This function is for checking if you're in a marker you previously created with ExM.Markers.Add","title":"ExM.Markers.In"},{"location":"functions/Server Functions/","text":"Server Functions Server functions exclusive to the OSX Core framework Note For these functions to work you must be using the OSX Core method of importing functions. To do this simply add shared_script '@OSX Core/imports.lua' to your fxmanifest.lua. ExM.Game.SpawnVehicle # OneSync Only ExM.Game.SpawnVehicle(vehModel, vehCoords) This function is a quick and easy way to create a vehicle from the server, no model requesting needed as it's serverside. You can choose whether or not to store the vehicle in a variable. Parameters Argument Data Type Optional Default Value Description vehModel hash No - The model of the vehicle you want to create, can be a hash or a string vehCoords vector3/4 No - You can use a vector3 or vector4 here, if only using a vector3 the heading will default to 0.0 Example local coords = vec4(-383.644, -1864.176, 20.5, 335.2) local vehicle = ExM.Game.SpawnVehicle(`jester`, coords) ExM.Game.CreatePed # OneSync Only ExM.Game.CreatePed(pedModel, pedCoords, pedType) This function is a quick and easy way to create a ped from the server, no model requesting needed as it's serverside. You can choose whether or not to store the ped in a variable. Parameters Argument Data Type Optional Default Value Description pedModel hash No - The model of the ped you want to spawn pedCoords vector3/4 No - You can use a vector3 or vector4 here, if only using a vector3 the heading will default to 0.0 pedType integer Yes 4 (PED_TYPE_CIVMALE) The type of ped you want to use. List of Ped Types Example local coords = vec4(-383.644, -1864.176, 20.5, 335.2) local ped = ExM.Game.CreatePed(`a_m_m_acult_01`, coords.xyzw, 27) ExM.Game.SpawnObject # OneSync Only ExM.Game.SpawnObject(objectModel, objectCoords, isDynamic) This function is a quick and easy way to create an object from the server, no model requesting needed as it's serverside. You can choose whether or not to store the object in a variable. Parameters Argument Data Type Optional Default Value Description objectModel hash No - The model of the object you want to spawn objectCoords vector3 No - The coordinates of where to spawn the object isDynamic boolean Yes true If you want the object to be dynamic or not Example local coords = vec3(-383.644, -1864.176, 20.5) local object = ExM.Game.SpawnObject(`prop_bin_05a`, coords.xyz, false)","title":"Server Functions"},{"location":"functions/Server Functions/#exmgamespawnvehicle","text":"OneSync Only ExM.Game.SpawnVehicle(vehModel, vehCoords) This function is a quick and easy way to create a vehicle from the server, no model requesting needed as it's serverside. You can choose whether or not to store the vehicle in a variable.","title":"ExM.Game.SpawnVehicle"},{"location":"functions/Server Functions/#exmgamecreateped","text":"OneSync Only ExM.Game.CreatePed(pedModel, pedCoords, pedType) This function is a quick and easy way to create a ped from the server, no model requesting needed as it's serverside. You can choose whether or not to store the ped in a variable.","title":"ExM.Game.CreatePed"},{"location":"functions/Server Functions/#exmgamespawnobject","text":"OneSync Only ExM.Game.SpawnObject(objectModel, objectCoords, isDynamic) This function is a quick and easy way to create an object from the server, no model requesting needed as it's serverside. You can choose whether or not to store the object in a variable.","title":"ExM.Game.SpawnObject"},{"location":"legal/credits/","text":"Credits This file is the best attempt at a credits file of people that have contributed to this project. It is sorted alphabetically by name. The fields are: Name (N) , Email (E) , Website (W) , and Discord (D) . If you would like something changed or removed feel free to make a PR or an issue and we can resolve it. N: AdrineX E: toni_pietila@hotmail.com N: Anthony E: 3721216+nearbyplayer@users.noreply.github.com N: Ben Sherman E: staffan.lowgren@hotmail.com N: BenjiM E: 34999231+BenjiM@users.noreply.github.com N: Corey McCown E: coreymccown13@gmail.com N: DanishRP E: soeren@bzn.dk N: David Rychl\u00fd E: davidrychly2@gmail.com N: Deliux E: deliuxxxas@gmail.com N: Dione Batista E: dione1993@hotmail.com N: Don E: 30905704+ddh3@users.noreply.github.com N: ElPumpo E: samo_kol@hotmail.com N: FumaPraQue E: 35692178+FumaPraQue@users.noreply.github.com N: izio38 E: romainbillot3009@gmail.com N: Jaymo E: jaymo1011@users.noreply.github.com D: Jaymo#1337 N: Jay E: edwardsjames@live.com N: jquiaios E: julien.quiaios@gmail.com N: Julien80 E: bailleul.j@me.com N: J\u00e9r\u00e9mie N'gadi E: jeremie.ngadi@gmail.com N: KandaSoranyan E: 32266067+KandaSoranyan@users.noreply.github.com N: kanersps D: kanersps#5288 N: lemonpea E: 59174721+lemonpea@users.noreply.github.com N: LuaDeldu E: luadelduwaht@outlook.fr N: L\u00e9n E: corbeau.lenaic@gmail.com N: MajorMarcin E: zelkowski.m@gmail.com N: Manuel E: 38227219+Tindergarten@users.noreply.github.com N: Michael Douglas E: maiconkkl@users.noreply.github.com N: MohamedAmrMahdy E: 36306971+MohamedAmrMahdy@users.noreply.github.com N: MrLumi E: lumilesff@hotmail.com N: nearbyplayer E: 3721216+nearbyplayer@users.noreply.github.com N: nearbyplayer E: aradz1299@gmail.com N: nearbyplayer E: nearbyplayer@users.noreply.github.com N: Netouss E: geoffrey.gravalon@supinfo.com N: nlmarcio E: neveslobo.m@gmail.com N: Oldarorn E: 36448848+Oldarorn@users.noreply.github.com N: Petr Sopf E: trsak1@seznam.cz N: Raven-RP E: 45501870+DecodazTV@users.noreply.github.com N: renaiku E: corbeau.lenaic@gmail.com N: renildomarcio E: krsolucoesweb@gmail.com N: rex2630 E: rex2630@gmail.com N: RoJea32 E: 57993332+RoJea32@users.noreply.github.com N: Romain Lanz E: romain.lanz@slynova.ch N: sabbo2001 E: sabbo2001@hotmail.com D: sabbo2001#1544 N: Samuel E: samo_kol@hotmail.com N: Smallo E: smallo92@gmail.com D: Smallo#2858 N: S\u00f8ren Eskildsen E: soeren@bzn.dk N: TakumiBR E: 31086346+TakumiBR@users.noreply.github.com N: Tracid E: tracid56@gmail.com N: ultratm E: renekiesewetter@msn.com N: Unknown E: dex35803@gmail.com N: userMacieG E: palatim3@gmail.com N: Vanheden E: 33155577+Vanheden@users.noreply.github.com N: Vegard Bendiktsen E: glitchdetector@gmail.com D: glitchdetector#0621 N: Viktor E: 35453587+LifeGoal@users.noreply.github.com N: Waltsh E: 36197644+Waltsh@users.noreply.github.com N: \u9ebb\u8fa3\u6208\u58c1 E: lpj.vip@foxmail.com","title":"Credits"},{"location":"legal/licenses/","text":"Licenses OSX Core - es_extended community fork All changes after 04/04/2020 are provided by their respective authors under the GNUGPLv3 license. es_extended - EssentialMode Extended framework for FiveM Copyright (C) 2015-2020 J\u00e9r\u00e9mie N'gadi This program Is free software: you can redistribute it And/Or modify it under the terms Of the GNU General Public License As published by the Free Software Foundation, either version 3 Of the License, Or (at your option) any later version. This program Is distributed In the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty Of MERCHANTABILITY Or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License For more details. You should have received a copy Of the GNU General Public License along with this program. If Not, see http://www.gnu.org/licenses/ .","title":"Licenses"}]}